#!/usr/bin/env python
PACKAGE = "camera_tracking"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("thresholdStep",       double_t, 0, "Threshold Step",             10,   0     )
gen.add("minThreshold",        double_t, 0, "Min Threshold",              10,   0     )
gen.add("maxThreshold",        double_t, 0, "Max Threshold",              220,  0     )
gen.add("minDistBetweenBlobs", double_t, 0, "Min Repeatability",          2,    0     )
gen.add("minRepeatability",    int_t,    0, "Min Distance Between Blobs", 10,   0     )
gen.add("filterByColor",       bool_t,   0, "Filter By Color",            False       )
gen.add("blobColor",           int_t,    0, "Blob Color",                 0,    0, 255)
gen.add("filterByArea",        bool_t,   0, "Filter By Area",             False       )
gen.add("minArea",             double_t, 0, "Min Area",                   25,   0     )
gen.add("maxArea",             double_t, 0, "Max Area",                   5000, 0     )
gen.add("filterByCircularity", bool_t,   0, "Filter By Circularity",      False       )
gen.add("minCircularity",      double_t, 0, "Min Circularity",            0.9,  0, 1  )
gen.add("maxCircularity",      double_t, 0, "Max Circularity",            1,    0, 1  )
gen.add("filterByInertia",     bool_t,   0, "Filter By Inertia",          False       )
gen.add("minInertiaRatio",     double_t, 0, "Min Inertia Ratio",          0.1,  0, 1  )
gen.add("maxInertiaRatio",     double_t, 0, "Max Inertia Ratio",          1,    0, 1  )
gen.add("filterByConvexity",   bool_t,   0, "Filter By Convexity",        False       )
gen.add("minConvexity",        double_t, 0, "Min Convexity",              0.95, 0, 1  )
gen.add("maxConvexity",        double_t, 0, "Max Convexity",              1,    0, 1  )

exit(gen.generate(PACKAGE, "blob_detect", "BlobDetect"))